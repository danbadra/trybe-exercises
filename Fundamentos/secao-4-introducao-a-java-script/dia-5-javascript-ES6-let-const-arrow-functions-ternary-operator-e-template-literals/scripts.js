// ExercÃ­cio 1

// ğŸš€ Altere o tipo das variÃ¡veis (var) para let ou const para que respeitem o escopo em que foram declaradas.

// ğŸš€ Modifique a variÃ¡vel para que respeite o escopo onde estÃ¡ sendo declarada. Lembre-se: para que a variÃ¡vel respeite o escopo, ela nÃ£o deve ser acessÃ­vel fora do escopo em que esteja sendo declarada.
// Copie o cÃ³digo abaixo e rode-o para verificar sua saÃ­da:

// ğŸš€ Altere o valor das propriedades do objeto, para que respeite as caracterÃ­sticas da variÃ¡vel do tipo const;

    // let pessoa = {
    //     nome: 'Henri',
    //     idade: 20
    //   }
    //   pessoa = {
    //     nome: 'Luna',
    //     idade: 19
    //   } // Altere essa estrutura para corrigir o erro.
    //   console.log('Nome:', pessoa.nome);
    //   console.log('Idade:', pessoa.idade);


// ExercÃ­cio 2

// ğŸš€ Modifique a estrutura das funÃ§Ãµes a seguir para que elas sejam arrow functions;

// ğŸš€ Transforme a funÃ§Ã£o numeroAleatorio em uma arrow function;

    // function numeroAleatorio() {
    //     return Math.random()
    // }
    
    // const numeroAleatorio = () => Math.random;
    
    // console.log(numeroAleatorio());

// ExercÃ­cio 3

// ğŸš€ Transforme a funÃ§Ã£o hello em uma arrow function;

    // function hello(nome) {
    //     return `OlÃ¡, ${nome}!`
    // }
    // let nome = 'Ivan';
    // console.log(hello(nome));

    // const hello = (nome) => {return `OlÃ¡, ${nome}!`};
    // let nome = 'Ivan';
    // console.log(hello(nome));


// ExercÃ­cio 4

// ğŸš€ Transforme a funÃ§Ã£o nomeCompleto em uma arrow function;

    // function nomeCompleto(nome, sobrenome) {
    //     return `${nome} ${sobrenome}`
    // }
    // let nome = 'Ivan';
    // let sobrenome = 'Pires';
    // console.log(nomeCompleto(nome, sobrenome));

    // const hello = (nome, sobrenome) => {return `OlÃ¡, ${nome} ${sobrenome}!`};
    // let nome = 'Ivan';
    // let sobrenome = 'Pires';
    // console.log(hello(nome, sobrenome));

// ExercÃ­cio 5

// ğŸš€ Altere a expressÃ£o if/else utilizando ternary operator;

    // let speed = 90;
    // const speedCar = (speed) => {
    // if (speed >= 120) {
    //     return `VocÃª ultrapassou o limite de velocidade`;
    // } else {
    //     return `VocÃª estÃ¡ na velocidade permitida`;
    // }
    // };
    // console.log(speedCar(speed));

    // let speed = 90;
    // const speedCar = (speed) => {
    // let radar = (speed < 120) ? 'VocÃª estÃ¡ na velocidade permitida' : 'VocÃª ultrapassou o limite de velocidade'
    // return radar
    // };
    // console.log(speedCar(speed));

